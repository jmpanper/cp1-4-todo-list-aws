pipeline {
    agent any
    stages {
        stage('GetCode') {
            steps {
                git branch: 'master', url: 'https://github.com/jmpanper/cp1-4-todo-list-aws.git'
                sh 'ls -la'
                echo "WORKSPACE: ${WORKSPACE}"
            }
        }
        stage('Deploy') {
            steps {
                sh '''
                    sam --version
                    sam build --config-env production
                    sam validate --region us-east-1
                '''
                // Manejo de errores en el despliegue sin eliminar el stack
                catchError(buildResult: 'UNSTABLE', stageResult: 'SUCCESS') {
                    sh 'sam deploy --config-env production --force-upload'
                }
                
                sh '''
                    SERVICE_BASE_URL=$(aws cloudformation describe-stacks --stack-name todo-list-aws-staging \
                    --query "Stacks[0].Outputs[?OutputKey==\'BaseUrlApi\'].OutputValue" --output text)

                    if [ -z "$SERVICE_BASE_URL" ]; then
                        echo "Error: No se pudo obtener la URL de la API."
                        exit 1
                    fi
                    
                    touch /tmp/service_base_url_cd.txt
                    echo "${SERVICE_BASE_URL}" > /tmp/service_base_url_cd.txt

                '''
            }
        }
        stage('Rest Test') {
            agent { label 'integration' }
            steps {
                sh '''
                    pytest --version
                    export SERVICE_BASE_URL=$(cat /tmp/service_base_url_cd.txt | tr -d '[:space:]')
                    echo "DEBUG: URL en ENV -> $SERVICE_BASE_URL"
                    env | grep SERVICE_BASE_URL || echo "SERVICE_BASE_URL no est√° en env"
                    pytest /home/ubuntu/cp1-4-todo-list-aws/test/integration/todoApiTest.py --junitxml=pytest-report.xml
                '''
            }
        }
    }
}
